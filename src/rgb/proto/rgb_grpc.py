# Generated by the Protocol Buffers compiler. DO NOT EDIT!
# source: rgb.proto
# plugin: grpclib.plugin.main
import abc
import typing

import grpclib.const
import grpclib.client
if typing.TYPE_CHECKING:
    import grpclib.server

import google.api.annotations_pb2
from . import rgb_pb2


class RgbServiceBase(abc.ABC):

    @abc.abstractmethod
    async def Animate(self, stream: 'grpclib.server.Stream[rgb_pb2.AnimateRequest, rgb_pb2.AnimateResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Clear(self, stream: 'grpclib.server.Stream[rgb_pb2.ClearRequest, rgb_pb2.ClearResponse]') -> None:
        pass

    @abc.abstractmethod
    async def Stop(self, stream: 'grpclib.server.Stream[rgb_pb2.StopRequest, rgb_pb2.StopResponse]') -> None:
        pass

    def __mapping__(self) -> typing.Dict[str, grpclib.const.Handler]:
        return {
            '/hipsterbrown.component.rgb.v1.RgbService/Animate': grpclib.const.Handler(
                self.Animate,
                grpclib.const.Cardinality.UNARY_UNARY,
                rgb_pb2.AnimateRequest,
                rgb_pb2.AnimateResponse,
            ),
            '/hipsterbrown.component.rgb.v1.RgbService/Clear': grpclib.const.Handler(
                self.Clear,
                grpclib.const.Cardinality.UNARY_UNARY,
                rgb_pb2.ClearRequest,
                rgb_pb2.ClearResponse,
            ),
            '/hipsterbrown.component.rgb.v1.RgbService/Stop': grpclib.const.Handler(
                self.Stop,
                grpclib.const.Cardinality.UNARY_UNARY,
                rgb_pb2.StopRequest,
                rgb_pb2.StopResponse,
            ),
        }


class RgbServiceStub:

    def __init__(self, channel: grpclib.client.Channel) -> None:
        self.Animate = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hipsterbrown.component.rgb.v1.RgbService/Animate',
            rgb_pb2.AnimateRequest,
            rgb_pb2.AnimateResponse,
        )
        self.Clear = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hipsterbrown.component.rgb.v1.RgbService/Clear',
            rgb_pb2.ClearRequest,
            rgb_pb2.ClearResponse,
        )
        self.Stop = grpclib.client.UnaryUnaryMethod(
            channel,
            '/hipsterbrown.component.rgb.v1.RgbService/Stop',
            rgb_pb2.StopRequest,
            rgb_pb2.StopResponse,
        )
